@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
	Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var locationImg = Model?.Value<IPublishedContent>("requestLocationBackgroundImg")?.Url() ?? "";



    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_phone"]?.ToString()!, out bool error_phone);
    bool.TryParse(ViewData["error_option"]?.ToString()!, out bool error_option);

}

@if (!string.IsNullOrEmpty(ViewBag.Title)) {
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}
    @await Html.PartialAsync("static/contactInformation")

<div class="request">
    <img src="@locationImg" alt="Office location Google Maps">
    <div class="container">
        <div class="request-form">
            <div class="headlines">
                <h6>@Model?.Value("requestSectionTitle")</h6>
                <h2>@Model?.Value("requestSectionHeadline")</h2>
                <p>@Model?.Value("requestText")</p>
            </div>
            @if (TempData["success"] != null)
            {
                <div class="success-message">@TempData["success"]<i class="fa-solid fa-envelope-circle-check"></i></div>
            }
            else
            {
                @using (Html.BeginUmbracoForm("HandleSubmit", "RequestSurface", FormMethod.Post))

                {
                    
                    <div id="form-name" class="input-group">
                        <label for="name"></label>
                        <span class="form-input-error @((error_name)? "form-invalid-input" : null)">You must enter your name</span>
                        <input type="text" name="name" placeholder="Name" value="@ViewData["name"]">    
                    </div>
                    <div id="form-phone" class="input-group">
                        <label for="phone"></label>
                        <span class="form-input-error @((error_phone)? "form-invalid-input" : null)">You must enter your phone number</span>
                        <input type="text" name="phone" placeholder="Phone" value="@ViewData["phone"]">
                    </div>
                    <div id="form-email" class="input-group">
                        <label for="email"></label>
                        <span class="form-input-error @((error_email)? "form-invalid-input" : null)">You must enter your email address</span>
                        <input type="text" name="email" placeholder="Email address" value="@ViewData["email"]">  
                    </div>

                    <div id="form-dropdown" class="input-group">
                        <label for="dropdown-menu"></label>
                        <span class="form-input-error @((error_option)? "form-invalid-input" : null)">You must choose one option</span>
                        <select id="dropdown-form-menu" name="SelectedOption">
                            <option value="">Select an option</option>
                            <option value="option1">Financial consulting</option>
                            <option value="option2">Statistic consulting</option>
                            <option value="option3">Risk Management consulting</option>
                        </select>
                        
                    </div>
                    <button class="btn-primary" type="submit">@Model?.Value("requestButtonText")</button>
                }
            }
            
        </div>
    </div>
</div>

@await Html.PartialAsync("blockgrid/components/imageSlider")
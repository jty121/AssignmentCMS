@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;


    var currentPage = Model;
    var projectPage = currentPage?.Parent<IPublishedContent>();
    
    var selectedTags = currentPage?.Value<IEnumerable<string>>("selectedKeywords") ?? Enumerable.Empty<string>();
    var pageKeywords = projectPage?.HasValue("pageKeywords") == true ? projectPage.Value<IEnumerable<string>>("pageKeywords") : Enumerable.Empty<string>();

    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
}

@if (!string.IsNullOrEmpty(ViewBag.Title)) {
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}


<div class="project-detail">
    <div class="container">  
        <aside class="detail-info">
            <div class="top-section">
                @Model?.Value("pageContent")
                <div class="choosed-tags">
                    <h5>@Model?.Value("selectedKeywordsTitle")</h5>
                    @if (selectedTags.Any()) 
                    {
                        foreach(var tag in selectedTags)
                        {
                             <span>@tag</span>
                        }
                    }
                </div>
            </div>   
		</aside>
		<div class="recent-projects">
            <h5>@Model?.Value("recentProjectSectionTitle")</h5>
                @await Html.PartialAsync("blockgrid/components/recentProjectSlider")
            <div class="tags">
                <h4>Tags</h4>
                <div class="tag-btns">
                    @if (pageKeywords != null && pageKeywords.Any())
                    {
                        foreach (var tag in pageKeywords)
                        {
                             <button class="btn-tags">@tag</button>
                        }
                    }
                </div>
                @if (TempData["success"] != null)

                {
                    <div class="success-message">@TempData["success"]<i class="fa-solid fa-envelope-circle-check"></i></div>
                }

                else

                {
                    @using (Html.BeginUmbracoForm("HandleEmailSubmit", "RequestSurface", FormMethod.Post))
                    {
                        <h4>@Model?.Value("supportEmailFormHeadline")</h4>
                        <p>@Model?.Value("supportEmailFormText")</p>

                        <div id="form-email" class="input-group">
                            <label for="email"></label>
                            <input type="text" name="email" placeholder="E-mail address" value="@ViewData["email"]">
                            <button type="submit" class="icon-submit">
                                <i class="fa-light fa-envelope"></i>
                            </button>
                            <span class="form-input-error @((error_email)? "form-invalid-input" : null)">You must enter your email address</span>
                        </div>
                    }
                }
            </div>
        </div> 
	</div>            
</div>

@await Html.PartialAsync("static/contactInformation")
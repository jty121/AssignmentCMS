@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var showcaseImage = Model?.Value<IPublishedContent>("showcaseBackgroundImg")?.Url() ?? "";
    var signatureImage = Model?.Value<IPublishedContent>("aboutUsSignatureImg")?.Url() ?? "";

    var trustedBybgImg = Model?.Value<IPublishedContent>("trustedByBackgroundImg")?.Url() ?? "";
    var trustedByImg = Model?.Value<IPublishedContent>("trustedBySectionImg")?.Url() ?? "";

    var storiesMapImg = Model?.Value<IPublishedContent>("storiesBackgroundImg")?.Url() ?? "";
    var storiesImg = Model?.Value<IPublishedContent>("storiesSelectedPhotoImg")?.Url() ?? "";

    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_phone"]?.ToString()!, out bool error_phone);
    bool.TryParse(ViewData["error_option"]?.ToString()!, out bool error_option);

}

@{
	var selection = Umbraco.Content(Guid.Parse("1ca93527-fa78-4044-a788-cb5c6edf0d46"))?
    .ChildrenOfType("serviceItemTemplate")
    ?.Where(x => x.IsVisible());
}

<section class="showcase">
    <div class="container">
        <img src="@showcaseImage" alt="@Model?.Value("showcaseImgAltText")">
        <div class="content">
            <h1>@Model?.Value("showcaseHeadline")</h1>
            <p>@Model?.Value("showcaseText")</p>
            <div>
                <a href="@Model?.Value("showcaseButtonUrl")" class="btn-primary">@Model?.Value("showcaseButtonText")</a>
            </div>
        </div>
    </div>
</section>

<section class="about-us">
    <div class="container">
        <div class="info">
            <span>@Model?.Value("aboutUsSectionTitle")</span>
            <h2>@Model?.Value("aboutUsHeadline")</h2>
            <blockquote>@Model?.Value("aboutUsQuote")</blockquote>
            <p>@Model?.Value("aboutUsText")</p>
            <img src="@signatureImage" alt="@Model?.Value("aboutUsImgAltText")">
            <p>@Model?.Value("aboutUsImgAltText")</p>
        </div>
        <div class="submit-form">
            <h3>@Model?.Value("requestFormTitle")</h3>

            @if (TempData["success"] != null)
            {
                <div class="success-message">@TempData["success"]<i class="fa-solid fa-envelope-circle-check"></i></div>
            }
            else
            {
                @using (Html.BeginUmbracoForm("HandleRequestSubmit", "RequestSurface", FormMethod.Post))

                {
                    <p>@Model?.Value("requestFormText")</p>
                    <div id="form-name" class="input-group">
                        <label for="name"></label>
                        <input type="text" name="name" placeholder="Name" value="@ViewData["name"]">
                        <span class="form-input-error @((error_name)? "form-invalid-input" : null)">You must enter your name</span>
                    </div>
                    <div id="form-email" class="input-group">
                        <label for="email"></label>
                        <input type="text" name="email" placeholder="Email address" value="@ViewData["email"]">
                        <span class="form-input-error @((error_email)? "form-invalid-input" : null)">You must enter your email address</span>
                    </div>
                    <div id="form-phone" class="input-group">
                        <label for="phone"></label>
                        <input type="text" name="phone" placeholder="Phone" value="@ViewData["phone"]">
                        <span class="form-input-error @((error_phone)? "form-invalid-input" : null)">You must enter your phone number</span>
                    </div>
                    <div id="form-dropdown" class="input-group">
                        <label for="dropdown-menu"></label>
                        <select id="dropdown-form-menu" name="SelectedOption">
                            <option value="" disabled selected hidden>Select an option</option>
                            <option value="option1">Financial consulting</option>
                            <option value="option2">Statistic consulting</option>
                            <option value="option3">Risk Management consulting</option>
                        </select>
                        <span class="form-input-error @((error_option)? "form-invalid-input" : null)">You must choose one option</span>
                    </div>
                    <button class="btn-accent" type="submit">@Model?.Value("requestFormButtonText")</button>
                }
            }

        </div>
    </div>
</section>
<section class="our-services">
    <div class="container">
        <div class="headline-services">
            <span>@Model?.Value("ourServicesSectionTitle")</span>
            <h2>@Model?.Value("ourServicesHeadline")</h2>
        </div>
        <div class="boxes-services">

            @if (selection != null && selection.Any())
            {
                @foreach (var item in selection)
                {
                    var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                    var thumbnailText = item?.Value<string>("thumbnailText") ?? "";

                    <div class="card">
                        <a href="@item?.Url()">
                            <h4>@item?.Name()</h4>
                            <img src="@image" alt="@item?.Name()">
                            <p>@thumbnailText</p>
                        </a>
                    </div>
                }
            }
            else
            {
                <p>No items found</p>
            }
        </div>               
    </div>
</section>

<section class="trusted-by">
    <div class="container">
        <div class="our-story">
            <h2>@Model?.Value("trustedBySectionHeadline")</h2>
            <span>@Model?.Value("trustedByNumbersInHeadline")</span>
            <p>@Model?.Value("trustedByText")</p>
            <a href="@Model?.Value("trustedByButtonUrl")" class="btn-primary">@Model?.Value("trustedByButtonText")</a>
        </div>
        <img class="img-map" src="@trustedBybgImg" alt="dotted world map">
        <img class="img-employees" src="@trustedByImg" alt="Group photo of employees">
    </div>
</section>

<section class="stories bg-primary">
    <div class="container">
        <span>@Model?.Value("storiesSectionTitle")</span>
        <h2>@Model?.Value("storiesHeadline")</h2>
        <img class="dotted-map" src="@storiesMapImg" alt="">
            <div class="success-story">
                <div class="facts">
                    <span>@Model?.Value("storiesStatisticNr1")</span>
                    <p>@Model?.Value("storiesStatisticNr1Text")</p>
                </div>
                <div class="facts">
                    <span>@Model?.Value("storiesStatisticNr2")</span>
                    <p>@Model?.Value("storiesStatisticNr2Text")</p>
                </div>
                <div class="facts">
                    <span>@Model?.Value("storiesStatisticNr3")</span>
                    <p>@Model?.Value("storiesStatisticNr3Text")</p>
                </div>
            </div>
        <img class="video" src="@storiesImg" alt="">
    </div>
</section>

<section class="our-projects">
    <div class="container">
        <span>@Model?.Value("ourProjectsSectionTitle")</span>
        <h2>@Model?.Value("ourProjectsHeadline")</h2>
    </div>
    @await Html.PartialAsync("blockgrid/components/ourProjectsImageSlider")
</section>
@await Html.PartialAsync("blockgrid/components/imageSlider")

@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var contentImg = Model?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";


    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_message"]?.ToString()!, out bool error_message);
}

@if (!string.IsNullOrEmpty(ViewBag.Title)) {
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}

<div class="services-details">
    <div class="container">
        <aside class="support">
            <div class="content">
                <h4>About us</h4>
                <img src="@contentImg" alt="@Model?.Value("pageTitle")">
                <p>@Model?.Value("thumbnailText")</p>
            </div>
                <form method="post">
                    <h4>How can we help you?</h4>
                    <p>online support 24/7, we are here to help you</p>

                    <div id="form-email" class="input-group">
                        <label for="email"></label>
                        <input type="text" name="email" placeholder="E-mail address">
                        <i class="fa-light fa-envelope"></i>
                    </div>
                </form>
        </aside>
        <div class="key-point">
            <div class="key-info">
				@Model?.Value("pageContent")
			</div>
		</div>
	</div>

</div>
    <div class="services-details-form">
        <div class="container">
            <h4>Have a question ?</h4>
            
            @if (TempData["success"] != null)
            {
            <div class="success-message">@TempData["success"]<i class="fa-solid fa-envelope-circle-check"></i></div>
            }
            else
            {
                @using (Html.BeginUmbracoForm("HandleQuestionSubmit", "RequestSurface", FormMethod.Post))
                {
                    <div id="form-name" class="input-group">
                        <label for="name"></label>
                        <input type="text" name="name" placeholder="Name" value="@ViewData["name"]">
                        <span class="form-input-error @((error_name)? "form-invalid-input" : null)">You must enter your name</span>
                    </div>
                    <div id="form-email" class="input-group">
                        <label for="email"></label>
                        <input type="text" name="email" placeholder="Email" value="@ViewData["email"]">
                        <span class="form-input-error @((error_email)? "form-invalid-input" : null)">You must enter your email address</span>
                    </div>
                    <div id="form-message" class="input-group">
                        <label for="message"></label>
                        <textarea class="message" name="message" rows="7" cols="50" placeholder="Question">@ViewData["message"]</textarea>
                        <span class="form-input-error @((error_message)? "form-invalid-input" : null)">You must enter a message</span>
                    </div>

                    <button class="btn-primary" type="submit">@Model?.Value("questionFormButtonText")</button>
                }
            }
        </div>
    </div>
@await Html.PartialAsync("static/contactInformation")